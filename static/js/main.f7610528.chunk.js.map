{"version":3,"sources":["components/Datatable/Datatable.js","logo.png","components/Header/Header.js","components/SearchForm/SearchForm.js","components/PhoneNumberStatistics/PhoneNumberStatistics.js","components/Statistics/Statistics.js","components/ReturnButton/ReturnButton.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Datatable","data","onNumberClick","React","useState","ascendingIsClicked","setAscendingisClicked","descendingIsClicked","setDescendingisClicked","sortedData","setSortedData","convertTime","timestamp","d","Date","getFullYear","getMonth","slice","getDate","getHours","getMinutes","phoneFormatter","phone","phoneString","toString","split","splice","join","handleNumberClick","e","target","dataset","number","useEffect","sort","a","b","calltime","array","sortingByDateDescending","className","title","onClick","map","row","to","s_in_wait","s_in_talk","agent","Math","random","Header","src","logo","alt","SearchForm","onSearchWord","searchWord","setSearchWord","onSubmit","preventDefault","placeholder","value","onChange","required","PhoneNumberStatistics","amount","Statistics","filterItem","setFilterItem","filteredData","setFilteredData","setTitle","handleClick","filter","results","obj","reduce","acc","rec","index","Object","entries","time","keyArray","step","max","min","stepArray","i","item","ceil","push","count","key","ReturnButton","App","setData","singlePhoneNumber","setSinglePhoneNumber","console","log","rows","showSinglePhoneData","Number","fetch","then","res","json","callsData","columns","newItem","length","newData","catch","err","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7610528.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Datatable.css';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nfunction Datatable({ data, onNumberClick }) {\r\n    const [ascendingIsClicked, setAscendingisClicked] = React.useState(false)\r\n    const [descendingIsClicked, setDescendingisClicked] = React.useState(false)\r\n    const [sortedData, setSortedData] = React.useState([])\r\n\r\n    React.useEffect(function () {\r\n\r\n        if (ascendingIsClicked === true) {\r\n            setSortedData(sortingByDateAscending(data))\r\n        }\r\n        else if (descendingIsClicked === true) {\r\n            setSortedData(sortingByDateDescending(data))\r\n        }\r\n        else {\r\n            setSortedData(data)\r\n        }\r\n    }, [ascendingIsClicked, descendingIsClicked, data])\r\n\r\n    function convertTime(timestamp) {\r\n        const d = new Date(timestamp * 1000) \r\n        const yyyy = d.getFullYear()\r\n        const mm = ('0' + (d.getMonth() + 1)).slice(-2)  \r\n        const dd = ('0' + d.getDate()).slice(-2) \r\n        const hh = d.getHours()\r\n        const min = ('0' + d.getMinutes()).slice(-2)  \r\n        const time = yyyy + '-' + mm + '-' + dd + ', ' + hh + ':' + min\r\n        return time;\r\n    }\r\n\r\n    function phoneFormatter(phone) {\r\n        const phoneString = phone.toString().split('');\r\n        phoneString.splice(1, \"\", \"(\");\r\n        phoneString.splice(5, \"\", \")\");\r\n        phoneString.splice(9, \"\", \"-\");\r\n        phoneString.splice(12, \"\", \"-\");\r\n        return '+' + phoneString.join('')\r\n    }\r\n\r\n    function sortingByDateAscending(array) {\r\n        return array.sort(function (a, b) {\r\n            return a.calltime - b.calltime\r\n        })\r\n    }\r\n\r\n    function sortingByDateDescending(array) {\r\n        return array.sort(function (a, b) {\r\n            return b.calltime - a.calltime\r\n        })\r\n    }\r\n\r\n    function handleAscending() {\r\n        setAscendingisClicked(true)\r\n        setDescendingisClicked(false)\r\n    }\r\n\r\n    function handleDescending() {\r\n        setAscendingisClicked(false)\r\n        setDescendingisClicked(true)\r\n    }\r\n\r\n    function handleNumberClick(e) {\r\n        onNumberClick(e.target.dataset.number)\r\n    }\r\n\r\n    return (\r\n        <section className=\"table\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Номер телефона\r\n                            <span className=\"table__info\" title=\"Для получения данных о звонках нажмите на номер телефона\">&#128712;</span>\r\n                        </th>\r\n                        <th className=\"table__header-box\">Дата и время звонка\r\n                            <div>\r\n                                <button onClick={handleAscending} className={ascendingIsClicked ? `table__header-button table__header-button_active` : `table__header-button`} title=\"Сортировка по возрастанию\">&#9650;</button>\r\n                                <button onClick={handleDescending} className={descendingIsClicked ? `table__header-button table__header-button_active` : `table__header-button`} title=\"Сортировка по убыванию\">&#9660;</button>\r\n                            </div>\r\n                        </th>\r\n                        <th>Время ожидания (сек)</th>\r\n                        <th>Время разговора (сек)</th>\r\n                        <th>ID оператора</th>\r\n                    </tr>\r\n                </thead>\r\n            </table>\r\n            <Scrollbars className=\"table__scroll\">\r\n                <table>\r\n                    <tbody>\r\n                        {\r\n                            sortedData.map(row => <tr className=\"row\" key={Math.random()}>\r\n                                <td ><Link className=\"table__link\" to=\"/phone\" onClick={handleNumberClick} data-number={row.number}>{phoneFormatter(row.number)}</Link></td>\r\n                                <td>{convertTime(row.calltime)}</td>\r\n                                <td>{row.s_in_wait}</td>\r\n                                <td>{row.s_in_talk}</td>\r\n                                <td>{row.agent}</td>\r\n                            </tr>)\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </Scrollbars>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Datatable;","export default __webpack_public_path__ + \"static/media/logo.b1413567.png\";","import React from 'react';\r\nimport './Header.css';\r\nimport logo from '../../logo.png';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"header__logo\" src={logo} alt=\"Логотип Супербазы\" />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './SearchForm.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction SearchForm({onSearchWord}) {\r\n    const [searchWord, setSearchWord] = React.useState('');\r\n    function handleSearchWord(e) {\r\n        setSearchWord(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onSearchWord(searchWord)\r\n    }\r\n\r\n    return (\r\n        <section className=\"search-form\">\r\n        <h1 className=\"search-form__title\">Информация о звонках клиентам</h1>\r\n        <div className=\"search-form__container\">\r\n            <form onSubmit={handleSubmit} className=\"search-form__form\">\r\n                <input className=\"search-form__input\"\r\n                    placeholder=\"Номер телефона в формате 78121234567 или ID оператора\"\r\n                    value={searchWord}\r\n                    onChange={handleSearchWord}\r\n                    required></input>\r\n                <button className=\"search-form__button\">Искать</button>\r\n            </form>\r\n            <div className=\"search-form__statistics-container\">\r\n                <p className=\"search-form__subtitle\">Статистика звонков по&nbsp;различным&nbsp;параметрам</p>\r\n                <Link to=\"/stat\" className=\"search-form__statistic-button\">Получить</Link>\r\n            </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default SearchForm;","import React from 'react';\r\nimport './PhoneNumberStatistics.css'\r\n\r\nfunction PhoneNumberStatistics({ number, amount }) {\r\n\r\n    return (\r\n        <section className=\"phone-statistics\">\r\n            <h2 className=\"phone-statistics__title\">{`По номеру телефона +${number} было совершено ${amount} звонков`}</h2>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default PhoneNumberStatistics;","/* eslint-disable array-callback-return */\r\n/* eslint-disable no-useless-concat */\r\nimport React from 'react';\r\nimport './Statistics.css'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nfunction Statistics({ data }) {\r\n    const [filterItem, setFilterItem] = React.useState('')\r\n    const [filteredData, setFilteredData] = React.useState([])\r\n    const [title, setTitle] = React.useState('Параметр')\r\n\r\n    function handleClick(e) {\r\n        setFilterItem(e.target.dataset.filter)\r\n        setTitle(e.target.dataset.title)\r\n    }\r\n\r\n    React.useEffect(function filtration() {\r\n        if (!filterItem) { return }\r\n        else if (filterItem === 'number' || filterItem === 'agent') {\r\n            const results = data.map((obj) => obj[filterItem]).reduce((acc, rec, index) => {\r\n                return (typeof acc[rec] !== 'undefined')\r\n                    ? { ...acc, [rec]: acc[rec] + 1 }\r\n                    : { ...acc, [rec]: 1 }\r\n            }, {})\r\n            setFilteredData(Object.entries(results))\r\n        }\r\n        else if (filterItem === 'calltime') {\r\n            const dateArray = data.map((obj) => {\r\n                const time = new Date((obj.calltime) * 1000)\r\n                return `${time.getFullYear()}` + '-' + '0' + `${time.getMonth() + 1}` + '-' + `${('0' + time.getDate()).slice(-2)}`\r\n            })\r\n            const results = dateArray.reduce((acc, rec, index) => {\r\n                return (typeof acc[rec] !== 'undefined')\r\n                    ? { ...acc, [rec]: acc[rec] + 1 }\r\n                    : { ...acc, [rec]: 1 }\r\n            }, {})\r\n            setFilteredData(Object.entries(results))\r\n        }\r\n        else {\r\n            const keyArray = data.map((obj) => obj[filterItem])\r\n            const step = (Math.max(...keyArray) - Math.min(...keyArray)) / 10\r\n            const stepArray = [0]\r\n            for (let i = -0; i <= 10; i++) {\r\n                const item = Math.ceil(Math.min(...keyArray) + step * i)\r\n                stepArray.push(item)\r\n            }\r\n            const results = {}\r\n            for (let i = 0; i <= 10; i++) {\r\n                let count = 0;\r\n                keyArray.map((item) => {\r\n                    if (item > stepArray[i] && item <= stepArray[i + 1])\r\n                        count += 1\r\n                })\r\n                const key = `${stepArray[i]}` + '-' + `${stepArray[i + 1]}`\r\n                results[key] = count\r\n            }\r\n            setFilteredData(Object.entries(results))\r\n        }\r\n    }, [filterItem, data])\r\n\r\n    return (\r\n        <section className=\"statistics\">\r\n            <h1 className=\"statistics__title\">Статистика количества звонков</h1>\r\n            <div className=\"statistics__option-container\">\r\n                <div className=\"statistics__option\" data-filter=\"number\" data-title=\"Номер телефона\" onClick={handleClick}>По номеру телефона</div>\r\n                <div className=\"statistics__option\" data-filter=\"calltime\" data-title=\"Дата\" onClick={handleClick}>\r\n                    По дате\r\n                </div>\r\n                <div className=\"statistics__option\" data-filter=\"s_in_wait\" data-title=\"Длительность ожидания (сек)\" onClick={handleClick}>\r\n                    По длительности ожидания&nbsp;(сек)\r\n                </div>\r\n                <div className=\"statistics__option\" data-filter=\"s_in_talk\" data-title=\"Длительность ожидания (сек)\" onClick={handleClick}>\r\n                    По длительности разговора&nbsp;(сек)\r\n                </div>\r\n                <div className=\"statistics__option\" data-filter=\"agent\" data-title=\"ID оператора\" onClick={handleClick}>\r\n                    По ID оператора\r\n                </div>\r\n            </div>\r\n            <div className=\"statistics__container\">\r\n            <table className=\"statistics__table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>{title}</th>\r\n                        <th>Количество звонков</th>\r\n                    </tr>\r\n                </thead>\r\n            </table>\r\n            <Scrollbars className=\"statistics__scroll\">\r\n            <table className=\"statistics__table\">\r\n                <tbody>\r\n                    {filteredData.map((row) => <tr className=\"row\">\r\n                        <td>{row[0]}</td>\r\n                        <td>{row[1]}</td>\r\n                    </tr>)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            </Scrollbars>\r\n           </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './ReturnButton.css'\r\n\r\nfunction ReturnButton() {\r\n    return (\r\n        <Link to=\"/\" className=\"return\">На главную&#8634;</Link>\r\n    );\r\n}\r\n\r\nexport default ReturnButton;","import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Datatable from '../Datatable/Datatable';\nimport Header from '../Header/Header';\nimport SearchForm from '../SearchForm/SearchForm';\nimport PhoneNumberStatistics from '../PhoneNumberStatistics/PhoneNumberStatistics';\nimport Statistics from '../Statistics/Statistics';\nimport ReturnButton from '../ReturnButton/ReturnButton';\n\nfunction App() {\n  const [data, setData] = React.useState([])\n  const [singlePhoneNumber, setSinglePhoneNumber] = React.useState([])\n  console.log(data)\n  const [searchWord, setSearchWord] = React.useState('')\n  console.log(searchWord)\n\n  useEffect(() => {\n    fetch('http://109.248.175.136:5000')\n      .then((res) => res.json())\n      .then((json) => {\n        const callsData = json.data;\n        const columns = json.columns;\n\n        return callsData.map((item) => {\n          const newItem = {};\n          for (let i = 0; i < callsData.length; i++) {\n            newItem[`${columns[i]}`] = item[i]\n          }\n          return newItem\n        })\n\n      })\n      .then((newData) => setData(newData))\n      .catch((err) => console.log(err))\n  }, [])\n\n  function handleSearch(a) {\n    setSearchWord(a)\n  }\n\n  function showResults(rows) {\n    return rows.filter(function (row) {\n      if (searchWord) {\n        return row.agent === Number(searchWord) || row.number === Number(searchWord)\n      } else {\n        return row\n      }\n    })\n  }\n\n  function handlePhoneNumber(number) {\n    setSinglePhoneNumber(number)\n  }\n\n  function showSinglePhoneData(rows) {\n    return rows.filter(function (row) {\n      if (singlePhoneNumber) {\n        return row.number === Number(singlePhoneNumber)\n      } else {\n        return row\n      }\n    })\n  }\n\n  function doNothing() {\n    return\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <SearchForm onSearchWord={handleSearch} />\n          <Datatable data={showResults(data)} onNumberClick={handlePhoneNumber} />\n        </Route>\n        <Route path=\"/phone\">\n          <PhoneNumberStatistics number={singlePhoneNumber} amount={showSinglePhoneData(data).length} />\n          <Datatable data={showSinglePhoneData(data)} onNumberClick={doNothing} />\n          <ReturnButton />\n        </Route>\n        <Route path=\"/stat\">\n          <Statistics data={data} />\n          <ReturnButton />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}